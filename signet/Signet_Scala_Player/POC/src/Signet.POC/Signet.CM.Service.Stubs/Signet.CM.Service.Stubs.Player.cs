//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=4.0.30319.1.
// 
namespace Signet.CM.Service.Stubs.Player
{


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="playerServiceSoapBinding", Namespace="http://v1.2.api.cm.scala.com")]
    public partial class playerService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback listPlayerGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback listMetaOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMetaValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback addPickValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMetaValuesOperationCompleted;
        
        private System.Threading.SendOrPostCallback deletePickValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPlayerLogFilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteMetaOperationCompleted;
        
        private System.Threading.SendOrPostCallback createPlayerWithPlanDeliveryOperationCompleted;
        
        private System.Threading.SendOrPostCallback deletePlayerDisplayOperationCompleted;
        
        private System.Threading.SendOrPostCallback createOperationCompleted;
        
        private System.Threading.SendOrPostCallback addExModuleOperationCompleted;
        
        private System.Threading.SendOrPostCallback addPickValuesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getExModulesForPlayerOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateOperationCompleted;
        
        private System.Threading.SendOrPostCallback createMetaOperationCompleted;
        
        private System.Threading.SendOrPostCallback countPlayerDisplaysOperationCompleted;
        
        private System.Threading.SendOrPostCallback removePlayerGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeExModuleOperationCompleted;
        
        private System.Threading.SendOrPostCallback addPlayerGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback addMetaValuesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPlayerHealthOperationCompleted;
        
        private System.Threading.SendOrPostCallback getOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSoftwareVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback clearProblemOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPlayerDisplaysOperationCompleted;
        
        private System.Threading.SendOrPostCallback addMetaValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback updatePlayerDisplayOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteAllPickValuesOperationCompleted;
        
        private System.Threading.SendOrPostCallback addPlayerDisplayOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAvailableExModulesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPlayerLogFileAsBytesOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteMetaValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteAllPlayerDisplaysOperationCompleted;
        
        private System.Threading.SendOrPostCallback addPlayerDisplaysOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteAllMetaValuesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPickValuesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMetaOperationCompleted;
        
        private System.Threading.SendOrPostCallback listOperationCompleted;
        
        /// <remarks/>
        public playerService() {
            this.Url = "https://cm02.signet.tv/ContentManager/api/v1.2/player";
        }
        
        /// <remarks/>
        public event listPlayerGroupsCompletedEventHandler listPlayerGroupsCompleted;
        
        /// <remarks/>
        public event listMetaCompletedEventHandler listMetaCompleted;
        
        /// <remarks/>
        public event getMetaValueCompletedEventHandler getMetaValueCompleted;
        
        /// <remarks/>
        public event addPickValueCompletedEventHandler addPickValueCompleted;
        
        /// <remarks/>
        public event getMetaValuesCompletedEventHandler getMetaValuesCompleted;
        
        /// <remarks/>
        public event deletePickValueCompletedEventHandler deletePickValueCompleted;
        
        /// <remarks/>
        public event getPlayerLogFilesCompletedEventHandler getPlayerLogFilesCompleted;
        
        /// <remarks/>
        public event deleteMetaCompletedEventHandler deleteMetaCompleted;
        
        /// <remarks/>
        public event createPlayerWithPlanDeliveryCompletedEventHandler createPlayerWithPlanDeliveryCompleted;
        
        /// <remarks/>
        public event deletePlayerDisplayCompletedEventHandler deletePlayerDisplayCompleted;
        
        /// <remarks/>
        public event createCompletedEventHandler createCompleted;
        
        /// <remarks/>
        public event addExModuleCompletedEventHandler addExModuleCompleted;
        
        /// <remarks/>
        public event addPickValuesCompletedEventHandler addPickValuesCompleted;
        
        /// <remarks/>
        public event getExModulesForPlayerCompletedEventHandler getExModulesForPlayerCompleted;
        
        /// <remarks/>
        public event updateCompletedEventHandler updateCompleted;
        
        /// <remarks/>
        public event createMetaCompletedEventHandler createMetaCompleted;
        
        /// <remarks/>
        public event countPlayerDisplaysCompletedEventHandler countPlayerDisplaysCompleted;
        
        /// <remarks/>
        public event removePlayerGroupCompletedEventHandler removePlayerGroupCompleted;
        
        /// <remarks/>
        public event removeExModuleCompletedEventHandler removeExModuleCompleted;
        
        /// <remarks/>
        public event addPlayerGroupCompletedEventHandler addPlayerGroupCompleted;
        
        /// <remarks/>
        public event addMetaValuesCompletedEventHandler addMetaValuesCompleted;
        
        /// <remarks/>
        public event getPlayerHealthCompletedEventHandler getPlayerHealthCompleted;
        
        /// <remarks/>
        public event getCompletedEventHandler getCompleted;
        
        /// <remarks/>
        public event getSoftwareVersionCompletedEventHandler getSoftwareVersionCompleted;
        
        /// <remarks/>
        public event clearProblemCompletedEventHandler clearProblemCompleted;
        
        /// <remarks/>
        public event getPlayerDisplaysCompletedEventHandler getPlayerDisplaysCompleted;
        
        /// <remarks/>
        public event addMetaValueCompletedEventHandler addMetaValueCompleted;
        
        /// <remarks/>
        public event updatePlayerDisplayCompletedEventHandler updatePlayerDisplayCompleted;
        
        /// <remarks/>
        public event deleteAllPickValuesCompletedEventHandler deleteAllPickValuesCompleted;
        
        /// <remarks/>
        public event addPlayerDisplayCompletedEventHandler addPlayerDisplayCompleted;
        
        /// <remarks/>
        public event getAvailableExModulesCompletedEventHandler getAvailableExModulesCompleted;
        
        /// <remarks/>
        public event getPlayerLogFileAsBytesCompletedEventHandler getPlayerLogFileAsBytesCompleted;
        
        /// <remarks/>
        public event deleteCompletedEventHandler deleteCompleted;
        
        /// <remarks/>
        public event deleteMetaValueCompletedEventHandler deleteMetaValueCompleted;
        
        /// <remarks/>
        public event deleteAllPlayerDisplaysCompletedEventHandler deleteAllPlayerDisplaysCompleted;
        
        /// <remarks/>
        public event addPlayerDisplaysCompletedEventHandler addPlayerDisplaysCompleted;
        
        /// <remarks/>
        public event deleteAllMetaValuesCompletedEventHandler deleteAllMetaValuesCompleted;
        
        /// <remarks/>
        public event getPickValuesCompletedEventHandler getPickValuesCompleted;
        
        /// <remarks/>
        public event getMetaCompletedEventHandler getMetaCompleted;
        
        /// <remarks/>
        public event listCompletedEventHandler listCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://v1.2.api.cm.scala.com", ResponseNamespace="http://v1.2.api.cm.scala.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("playerGroups", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public playerGroupTO[] listPlayerGroups([System.Xml.Serialization.XmlElementAttribute("searchCriteria", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] searchCriteriaTO[] searchCriteria, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] listResultCriteriaTO listResult) {
            object[] results = this.Invoke("listPlayerGroups", new object[] {
                        searchCriteria,
                        listResult});
            return ((playerGroupTO[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginlistPlayerGroups(searchCriteriaTO[] searchCriteria, listResultCriteriaTO listResult, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("listPlayerGroups", new object[] {
                        searchCriteria,
                        listResult}, callback, asyncState);
        }
        
        /// <remarks/>
        public playerGroupTO[] EndlistPlayerGroups(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((playerGroupTO[])(results[0]));
        }
        
        /// <remarks/>
        public void listPlayerGroupsAsync(searchCriteriaTO[] searchCriteria, listResultCriteriaTO listResult) {
            this.listPlayerGroupsAsync(searchCriteria, listResult, null);
        }
        
        /// <remarks/>
        public void listPlayerGroupsAsync(searchCriteriaTO[] searchCriteria, listResultCriteriaTO listResult, object userState) {
            if ((this.listPlayerGroupsOperationCompleted == null)) {
                this.listPlayerGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistPlayerGroupsOperationCompleted);
            }
            this.InvokeAsync("listPlayerGroups", new object[] {
                        searchCriteria,
                        listResult}, this.listPlayerGroupsOperationCompleted, userState);
        }
        
        private void OnlistPlayerGroupsOperationCompleted(object arg) {
            if ((this.listPlayerGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listPlayerGroupsCompleted(this, new listPlayerGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://v1.2.api.cm.scala.com", ResponseNamespace="http://v1.2.api.cm.scala.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("metadata", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public metadataTO[] listMeta([System.Xml.Serialization.XmlElementAttribute("searchCriteria", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] searchCriteriaTO[] searchCriteria, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] listResultCriteriaTO listResult) {
            object[] results = this.Invoke("listMeta", new object[] {
                        searchCriteria,
                        listResult});
            return ((metadataTO[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginlistMeta(searchCriteriaTO[] searchCriteria, listResultCriteriaTO listResult, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("listMeta", new object[] {
                        searchCriteria,
                        listResult}, callback, asyncState);
        }
        
        /// <remarks/>
        public metadataTO[] EndlistMeta(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((metadataTO[])(results[0]));
        }
        
        /// <remarks/>
        public void listMetaAsync(searchCriteriaTO[] searchCriteria, listResultCriteriaTO listResult) {
            this.listMetaAsync(searchCriteria, listResult, null);
        }
        
        /// <remarks/>
        public void listMetaAsync(searchCriteriaTO[] searchCriteria, listResultCriteriaTO listResult, object userState) {
            if ((this.listMetaOperationCompleted == null)) {
                this.listMetaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistMetaOperationCompleted);
            }
            this.InvokeAsync("listMeta", new object[] {
                        searchCriteria,
                        listResult}, this.listMetaOperationCompleted, userState);
        }
        
        private void OnlistMetaOperationCompleted(object arg) {
            if ((this.listMetaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listMetaCompleted(this, new listMetaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://v1.2.api.cm.scala.com", ResponseNamespace="http://v1.2.api.cm.scala.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("value", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public metadataValueTO getMetaValue([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int metaValueId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool metaValueIdSpecified) {
            object[] results = this.Invoke("getMetaValue", new object[] {
                        metaValueId,
                        metaValueIdSpecified});
            return ((metadataValueTO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetMetaValue(int metaValueId, bool metaValueIdSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getMetaValue", new object[] {
                        metaValueId,
                        metaValueIdSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public metadataValueTO EndgetMetaValue(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((metadataValueTO)(results[0]));
        }
        
        /// <remarks/>
        public void getMetaValueAsync(int metaValueId, bool metaValueIdSpecified) {
            this.getMetaValueAsync(metaValueId, metaValueIdSpecified, null);
        }
        
        /// <remarks/>
        public void getMetaValueAsync(int metaValueId, bool metaValueIdSpecified, object userState) {
            if ((this.getMetaValueOperationCompleted == null)) {
                this.getMetaValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMetaValueOperationCompleted);
            }
            this.InvokeAsync("getMetaValue", new object[] {
                        metaValueId,
                        metaValueIdSpecified}, this.getMetaValueOperationCompleted, userState);
        }
        
        private void OngetMetaValueOperationCompleted(object arg) {
            if ((this.getMetaValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMetaValueCompleted(this, new getMetaValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://v1.2.api.cm.scala.com", ResponseNamespace="http://v1.2.api.cm.scala.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("addedPicklistValue", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public picklistValueTO addPickValue([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int metadataId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool metadataIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] picklistValueTO picklistValue) {
            object[] results = this.Invoke("addPickValue", new object[] {
                        metadataId,
                        metadataIdSpecified,
                        picklistValue});
            return ((picklistValueTO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddPickValue(int metadataId, bool metadataIdSpecified, picklistValueTO picklistValue, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addPickValue", new object[] {
                        metadataId,
                        metadataIdSpecified,
                        picklistValue}, callback, asyncState);
        }
        
        /// <remarks/>
        public picklistValueTO EndaddPickValue(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((picklistValueTO)(results[0]));
        }
        
        /// <remarks/>
        public void addPickValueAsync(int metadataId, bool metadataIdSpecified, picklistValueTO picklistValue) {
            this.addPickValueAsync(metadataId, metadataIdSpecified, picklistValue, null);
        }
        
        /// <remarks/>
        public void addPickValueAsync(int metadataId, bool metadataIdSpecified, picklistValueTO picklistValue, object userState) {
            if ((this.addPickValueOperationCompleted == null)) {
                this.addPickValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddPickValueOperationCompleted);
            }
            this.InvokeAsync("addPickValue", new object[] {
                        metadataId,
                        metadataIdSpecified,
                        picklistValue}, this.addPickValueOperationCompleted, userState);
        }
        
        private void OnaddPickValueOperationCompleted(object arg) {
            if ((this.addPickValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addPickValueCompleted(this, new addPickValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://v1.2.api.cm.scala.com", ResponseNamespace="http://v1.2.api.cm.scala.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("values", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public metadataValueTO[] getMetaValues([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int playerId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool playerIdSpecified) {
            object[] results = this.Invoke("getMetaValues", new object[] {
                        playerId,
                        playerIdSpecified});
            return ((metadataValueTO[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetMetaValues(int playerId, bool playerIdSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getMetaValues", new object[] {
                        playerId,
                        playerIdSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public metadataValueTO[] EndgetMetaValues(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((metadataValueTO[])(results[0]));
        }
        
        /// <remarks/>
        public void getMetaValuesAsync(int playerId, bool playerIdSpecified) {
            this.getMetaValuesAsync(playerId, playerIdSpecified, null);
        }
        
        /// <remarks/>
        public void getMetaValuesAsync(int playerId, bool playerIdSpecified, object userState) {
            if ((this.getMetaValuesOperationCompleted == null)) {
                this.getMetaValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMetaValuesOperationCompleted);
            }
            this.InvokeAsync("getMetaValues", new object[] {
                        playerId,
                        playerIdSpecified}, this.getMetaValuesOperationCompleted, userState);
        }
        
        private void OngetMetaValuesOperationCompleted(object arg) {
            if ((this.getMetaValuesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMetaValuesCompleted(this, new getMetaValuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://v1.2.api.cm.scala.com", ResponseNamespace="http://v1.2.api.cm.scala.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deletePickValue([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int picklistValueId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool picklistValueIdSpecified) {
            this.Invoke("deletePickValue", new object[] {
                        picklistValueId,
                        picklistValueIdSpecified});
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeletePickValue(int picklistValueId, bool picklistValueIdSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deletePickValue", new object[] {
                        picklistValueId,
                        picklistValueIdSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EnddeletePickValue(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void deletePickValueAsync(int picklistValueId, bool picklistValueIdSpecified) {
            this.deletePickValueAsync(picklistValueId, picklistValueIdSpecified, null);
        }
        
        /// <remarks/>
        public void deletePickValueAsync(int picklistValueId, bool picklistValueIdSpecified, object userState) {
            if ((this.deletePickValueOperationCompleted == null)) {
                this.deletePickValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeletePickValueOperationCompleted);
            }
            this.InvokeAsync("deletePickValue", new object[] {
                        picklistValueId,
                        picklistValueIdSpecified}, this.deletePickValueOperationCompleted, userState);
        }
        
        private void OndeletePickValueOperationCompleted(object arg) {
            if ((this.deletePickValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deletePickValueCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://v1.2.api.cm.scala.com", ResponseNamespace="http://v1.2.api.cm.scala.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public playerLogTO[] getPlayerLogFiles([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int playerId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool playerIdSpecified) {
            object[] results = this.Invoke("getPlayerLogFiles", new object[] {
                        playerId,
                        playerIdSpecified});
            return ((playerLogTO[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetPlayerLogFiles(int playerId, bool playerIdSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getPlayerLogFiles", new object[] {
                        playerId,
                        playerIdSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public playerLogTO[] EndgetPlayerLogFiles(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((playerLogTO[])(results[0]));
        }
        
        /// <remarks/>
        public void getPlayerLogFilesAsync(int playerId, bool playerIdSpecified) {
            this.getPlayerLogFilesAsync(playerId, playerIdSpecified, null);
        }
        
        /// <remarks/>
        public void getPlayerLogFilesAsync(int playerId, bool playerIdSpecified, object userState) {
            if ((this.getPlayerLogFilesOperationCompleted == null)) {
                this.getPlayerLogFilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPlayerLogFilesOperationCompleted);
            }
            this.InvokeAsync("getPlayerLogFiles", new object[] {
                        playerId,
                        playerIdSpecified}, this.getPlayerLogFilesOperationCompleted, userState);
        }
        
        private void OngetPlayerLogFilesOperationCompleted(object arg) {
            if ((this.getPlayerLogFilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPlayerLogFilesCompleted(this, new getPlayerLogFilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://v1.2.api.cm.scala.com", ResponseNamespace="http://v1.2.api.cm.scala.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteMeta([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int metadataId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool metadataIdSpecified) {
            this.Invoke("deleteMeta", new object[] {
                        metadataId,
                        metadataIdSpecified});
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteMeta(int metadataId, bool metadataIdSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteMeta", new object[] {
                        metadataId,
                        metadataIdSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EnddeleteMeta(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void deleteMetaAsync(int metadataId, bool metadataIdSpecified) {
            this.deleteMetaAsync(metadataId, metadataIdSpecified, null);
        }
        
        /// <remarks/>
        public void deleteMetaAsync(int metadataId, bool metadataIdSpecified, object userState) {
            if ((this.deleteMetaOperationCompleted == null)) {
                this.deleteMetaOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteMetaOperationCompleted);
            }
            this.InvokeAsync("deleteMeta", new object[] {
                        metadataId,
                        metadataIdSpecified}, this.deleteMetaOperationCompleted, userState);
        }
        
        private void OndeleteMetaOperationCompleted(object arg) {
            if ((this.deleteMetaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteMetaCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://v1.2.api.cm.scala.com", ResponseNamespace="http://v1.2.api.cm.scala.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("createdPlayer", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public playerTO createPlayerWithPlanDelivery([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] playerTO playerTOV11, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] planDeliveryTO planDeliveryTOV11) {
            object[] results = this.Invoke("createPlayerWithPlanDelivery", new object[] {
                        playerTOV11,
                        planDeliveryTOV11});
            return ((playerTO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincreatePlayerWithPlanDelivery(playerTO playerTOV11, planDeliveryTO planDeliveryTOV11, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("createPlayerWithPlanDelivery", new object[] {
                        playerTOV11,
                        planDeliveryTOV11}, callback, asyncState);
        }
        
        /// <remarks/>
        public playerTO EndcreatePlayerWithPlanDelivery(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((playerTO)(results[0]));
        }
        
        /// <remarks/>
        public void createPlayerWithPlanDeliveryAsync(playerTO playerTOV11, planDeliveryTO planDeliveryTOV11) {
            this.createPlayerWithPlanDeliveryAsync(playerTOV11, planDeliveryTOV11, null);
        }
        
        /// <remarks/>
        public void createPlayerWithPlanDeliveryAsync(playerTO playerTOV11, planDeliveryTO planDeliveryTOV11, object userState) {
            if ((this.createPlayerWithPlanDeliveryOperationCompleted == null)) {
                this.createPlayerWithPlanDeliveryOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreatePlayerWithPlanDeliveryOperationCompleted);
            }
            this.InvokeAsync("createPlayerWithPlanDelivery", new object[] {
                        playerTOV11,
                        planDeliveryTOV11}, this.createPlayerWithPlanDeliveryOperationCompleted, userState);
        }
        
        private void OncreatePlayerWithPlanDeliveryOperationCompleted(object arg) {
            if ((this.createPlayerWithPlanDeliveryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createPlayerWithPlanDeliveryCompleted(this, new createPlayerWithPlanDeliveryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://v1.2.api.cm.scala.com", ResponseNamespace="http://v1.2.api.cm.scala.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deletePlayerDisplay([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int playerDisplayId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool playerDisplayIdSpecified) {
            this.Invoke("deletePlayerDisplay", new object[] {
                        playerDisplayId,
                        playerDisplayIdSpecified});
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeletePlayerDisplay(int playerDisplayId, bool playerDisplayIdSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deletePlayerDisplay", new object[] {
                        playerDisplayId,
                        playerDisplayIdSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EnddeletePlayerDisplay(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void deletePlayerDisplayAsync(int playerDisplayId, bool playerDisplayIdSpecified) {
            this.deletePlayerDisplayAsync(playerDisplayId, playerDisplayIdSpecified, null);
        }
        
        /// <remarks/>
        public void deletePlayerDisplayAsync(int playerDisplayId, bool playerDisplayIdSpecified, object userState) {
            if ((this.deletePlayerDisplayOperationCompleted == null)) {
                this.deletePlayerDisplayOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeletePlayerDisplayOperationCompleted);
            }
            this.InvokeAsync("deletePlayerDisplay", new object[] {
                        playerDisplayId,
                        playerDisplayIdSpecified}, this.deletePlayerDisplayOperationCompleted, userState);
        }
        
        private void OndeletePlayerDisplayOperationCompleted(object arg) {
            if ((this.deletePlayerDisplayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deletePlayerDisplayCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://v1.2.api.cm.scala.com", ResponseNamespace="http://v1.2.api.cm.scala.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("createdPlayer", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public playerTO create([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] playerTO player) {
            object[] results = this.Invoke("create", new object[] {
                        player});
            return ((playerTO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Begincreate(playerTO player, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("create", new object[] {
                        player}, callback, asyncState);
        }
        
        /// <remarks/>
        public playerTO Endcreate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((playerTO)(results[0]));
        }
        
        /// <remarks/>
        public void createAsync(playerTO player) {
            this.createAsync(player, null);
        }
        
        /// <remarks/>
        public void createAsync(playerTO player, object userState) {
            if ((this.createOperationCompleted == null)) {
                this.createOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateOperationCompleted);
            }
            this.InvokeAsync("create", new object[] {
                        player}, this.createOperationCompleted, userState);
        }
        
        private void OncreateOperationCompleted(object arg) {
            if ((this.createCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createCompleted(this, new createCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://v1.2.api.cm.scala.com", ResponseNamespace="http://v1.2.api.cm.scala.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addExModule([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int playerId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool playerIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] exModuleTO exModuleTO) {
            this.Invoke("addExModule", new object[] {
                        playerId,
                        playerIdSpecified,
                        exModuleTO});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddExModule(int playerId, bool playerIdSpecified, exModuleTO exModuleTO, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addExModule", new object[] {
                        playerId,
                        playerIdSpecified,
                        exModuleTO}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndaddExModule(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void addExModuleAsync(int playerId, bool playerIdSpecified, exModuleTO exModuleTO) {
            this.addExModuleAsync(playerId, playerIdSpecified, exModuleTO, null);
        }
        
        /// <remarks/>
        public void addExModuleAsync(int playerId, bool playerIdSpecified, exModuleTO exModuleTO, object userState) {
            if ((this.addExModuleOperationCompleted == null)) {
                this.addExModuleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddExModuleOperationCompleted);
            }
            this.InvokeAsync("addExModule", new object[] {
                        playerId,
                        playerIdSpecified,
                        exModuleTO}, this.addExModuleOperationCompleted, userState);
        }
        
        private void OnaddExModuleOperationCompleted(object arg) {
            if ((this.addExModuleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addExModuleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://v1.2.api.cm.scala.com", ResponseNamespace="http://v1.2.api.cm.scala.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("addedPicklistValues", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public picklistValueTO[] addPickValues([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int metadataId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool metadataIdSpecified, [System.Xml.Serialization.XmlElementAttribute("picklistValues", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] picklistValueTO[] picklistValues) {
            object[] results = this.Invoke("addPickValues", new object[] {
                        metadataId,
                        metadataIdSpecified,
                        picklistValues});
            return ((picklistValueTO[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddPickValues(int metadataId, bool metadataIdSpecified, picklistValueTO[] picklistValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addPickValues", new object[] {
                        metadataId,
                        metadataIdSpecified,
                        picklistValues}, callback, asyncState);
        }
        
        /// <remarks/>
        public picklistValueTO[] EndaddPickValues(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((picklistValueTO[])(results[0]));
        }
        
        /// <remarks/>
        public void addPickValuesAsync(int metadataId, bool metadataIdSpecified, picklistValueTO[] picklistValues) {
            this.addPickValuesAsync(metadataId, metadataIdSpecified, picklistValues, null);
        }
        
        /// <remarks/>
        public void addPickValuesAsync(int metadataId, bool metadataIdSpecified, picklistValueTO[] picklistValues, object userState) {
            if ((this.addPickValuesOperationCompleted == null)) {
                this.addPickValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddPickValuesOperationCompleted);
            }
            this.InvokeAsync("addPickValues", new object[] {
                        metadataId,
                        metadataIdSpecified,
                        picklistValues}, this.addPickValuesOperationCompleted, userState);
        }
        
        private void OnaddPickValuesOperationCompleted(object arg) {
            if ((this.addPickValuesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addPickValuesCompleted(this, new addPickValuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://v1.2.api.cm.scala.com", ResponseNamespace="http://v1.2.api.cm.scala.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public exModuleTO[] getExModulesForPlayer([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int playerId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool playerIdSpecified) {
            object[] results = this.Invoke("getExModulesForPlayer", new object[] {
                        playerId,
                        playerIdSpecified});
            return ((exModuleTO[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetExModulesForPlayer(int playerId, bool playerIdSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getExModulesForPlayer", new object[] {
                        playerId,
                        playerIdSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public exModuleTO[] EndgetExModulesForPlayer(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((exModuleTO[])(results[0]));
        }
        
        /// <remarks/>
        public void getExModulesForPlayerAsync(int playerId, bool playerIdSpecified) {
            this.getExModulesForPlayerAsync(playerId, playerIdSpecified, null);
        }
        
        /// <remarks/>
        public void getExModulesForPlayerAsync(int playerId, bool playerIdSpecified, object userState) {
            if ((this.getExModulesForPlayerOperationCompleted == null)) {
                this.getExModulesForPlayerOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetExModulesForPlayerOperationCompleted);
            }
            this.InvokeAsync("getExModulesForPlayer", new object[] {
                        playerId,
                        playerIdSpecified}, this.getExModulesForPlayerOperationCompleted, userState);
        }
        
        private void OngetExModulesForPlayerOperationCompleted(object arg) {
            if ((this.getExModulesForPlayerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getExModulesForPlayerCompleted(this, new getExModulesForPlayerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://v1.2.api.cm.scala.com", ResponseNamespace="http://v1.2.api.cm.scala.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("updatedPlayer", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public playerTO update([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] playerTO player) {
            object[] results = this.Invoke("update", new object[] {
                        player});
            return ((playerTO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginupdate(playerTO player, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("update", new object[] {
                        player}, callback, asyncState);
        }
        
        /// <remarks/>
        public playerTO Endupdate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((playerTO)(results[0]));
        }
        
        /// <remarks/>
        public void updateAsync(playerTO player) {
            this.updateAsync(player, null);
        }
        
        /// <remarks/>
        public void updateAsync(playerTO player, object userState) {
            if ((this.updateOperationCompleted == null)) {
                this.updateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateOperationCompleted);
            }
            this.InvokeAsync("update", new object[] {
                        player}, this.updateOperationCompleted, userState);
        }
        
        private void OnupdateOperationCompleted(object arg) {
            if ((this.updateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateCompleted(this, new updateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://v1.2.api.cm.scala.com", ResponseNamespace="http://v1.2.api.cm.scala.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("createdMetadata", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public metadataTO createMeta([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] metadataTO metadata) {
            object[] results = this.Invoke("createMeta", new object[] {
                        metadata});
            return ((metadataTO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincreateMeta(metadataTO metadata, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("createMeta", new object[] {
                        metadata}, callback, asyncState);
        }
        
        /// <remarks/>
        public metadataTO EndcreateMeta(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((metadataTO)(results[0]));
        }
        
        /// <remarks/>
        public void createMetaAsync(metadataTO metadata) {
            this.createMetaAsync(metadata, null);
        }
        
        /// <remarks/>
        public void createMetaAsync(metadataTO metadata, object userState) {
            if ((this.createMetaOperationCompleted == null)) {
                this.createMetaOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateMetaOperationCompleted);
            }
            this.InvokeAsync("createMeta", new object[] {
                        metadata}, this.createMetaOperationCompleted, userState);
        }
        
        private void OncreateMetaOperationCompleted(object arg) {
            if ((this.createMetaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createMetaCompleted(this, new createMetaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://v1.2.api.cm.scala.com", ResponseNamespace="http://v1.2.api.cm.scala.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void countPlayerDisplays([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int playerId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool playerIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out int counter, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] out bool counterSpecified) {
            object[] results = this.Invoke("countPlayerDisplays", new object[] {
                        playerId,
                        playerIdSpecified});
            counter = ((int)(results[0]));
            counterSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincountPlayerDisplays(int playerId, bool playerIdSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("countPlayerDisplays", new object[] {
                        playerId,
                        playerIdSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndcountPlayerDisplays(System.IAsyncResult asyncResult, out int counter, out bool counterSpecified) {
            object[] results = this.EndInvoke(asyncResult);
            counter = ((int)(results[0]));
            counterSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void countPlayerDisplaysAsync(int playerId, bool playerIdSpecified) {
            this.countPlayerDisplaysAsync(playerId, playerIdSpecified, null);
        }
        
        /// <remarks/>
        public void countPlayerDisplaysAsync(int playerId, bool playerIdSpecified, object userState) {
            if ((this.countPlayerDisplaysOperationCompleted == null)) {
                this.countPlayerDisplaysOperationCompleted = new System.Threading.SendOrPostCallback(this.OncountPlayerDisplaysOperationCompleted);
            }
            this.InvokeAsync("countPlayerDisplays", new object[] {
                        playerId,
                        playerIdSpecified}, this.countPlayerDisplaysOperationCompleted, userState);
        }
        
        private void OncountPlayerDisplaysOperationCompleted(object arg) {
            if ((this.countPlayerDisplaysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.countPlayerDisplaysCompleted(this, new countPlayerDisplaysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://v1.2.api.cm.scala.com", ResponseNamespace="http://v1.2.api.cm.scala.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void removePlayerGroup([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int playerId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool playerIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int playerGroupId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool playerGroupIdSpecified) {
            this.Invoke("removePlayerGroup", new object[] {
                        playerId,
                        playerIdSpecified,
                        playerGroupId,
                        playerGroupIdSpecified});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginremovePlayerGroup(int playerId, bool playerIdSpecified, int playerGroupId, bool playerGroupIdSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("removePlayerGroup", new object[] {
                        playerId,
                        playerIdSpecified,
                        playerGroupId,
                        playerGroupIdSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndremovePlayerGroup(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void removePlayerGroupAsync(int playerId, bool playerIdSpecified, int playerGroupId, bool playerGroupIdSpecified) {
            this.removePlayerGroupAsync(playerId, playerIdSpecified, playerGroupId, playerGroupIdSpecified, null);
        }
        
        /// <remarks/>
        public void removePlayerGroupAsync(int playerId, bool playerIdSpecified, int playerGroupId, bool playerGroupIdSpecified, object userState) {
            if ((this.removePlayerGroupOperationCompleted == null)) {
                this.removePlayerGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremovePlayerGroupOperationCompleted);
            }
            this.InvokeAsync("removePlayerGroup", new object[] {
                        playerId,
                        playerIdSpecified,
                        playerGroupId,
                        playerGroupIdSpecified}, this.removePlayerGroupOperationCompleted, userState);
        }
        
        private void OnremovePlayerGroupOperationCompleted(object arg) {
            if ((this.removePlayerGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removePlayerGroupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://v1.2.api.cm.scala.com", ResponseNamespace="http://v1.2.api.cm.scala.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void removeExModule([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int playerId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool playerIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] exModuleTO exModuleTO) {
            this.Invoke("removeExModule", new object[] {
                        playerId,
                        playerIdSpecified,
                        exModuleTO});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginremoveExModule(int playerId, bool playerIdSpecified, exModuleTO exModuleTO, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("removeExModule", new object[] {
                        playerId,
                        playerIdSpecified,
                        exModuleTO}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndremoveExModule(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void removeExModuleAsync(int playerId, bool playerIdSpecified, exModuleTO exModuleTO) {
            this.removeExModuleAsync(playerId, playerIdSpecified, exModuleTO, null);
        }
        
        /// <remarks/>
        public void removeExModuleAsync(int playerId, bool playerIdSpecified, exModuleTO exModuleTO, object userState) {
            if ((this.removeExModuleOperationCompleted == null)) {
                this.removeExModuleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveExModuleOperationCompleted);
            }
            this.InvokeAsync("removeExModule", new object[] {
                        playerId,
                        playerIdSpecified,
                        exModuleTO}, this.removeExModuleOperationCompleted, userState);
        }
        
        private void OnremoveExModuleOperationCompleted(object arg) {
            if ((this.removeExModuleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeExModuleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://v1.2.api.cm.scala.com", ResponseNamespace="http://v1.2.api.cm.scala.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addPlayerGroup([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int playerId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool playerIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int playerGroupId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool playerGroupIdSpecified) {
            this.Invoke("addPlayerGroup", new object[] {
                        playerId,
                        playerIdSpecified,
                        playerGroupId,
                        playerGroupIdSpecified});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddPlayerGroup(int playerId, bool playerIdSpecified, int playerGroupId, bool playerGroupIdSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addPlayerGroup", new object[] {
                        playerId,
                        playerIdSpecified,
                        playerGroupId,
                        playerGroupIdSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndaddPlayerGroup(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void addPlayerGroupAsync(int playerId, bool playerIdSpecified, int playerGroupId, bool playerGroupIdSpecified) {
            this.addPlayerGroupAsync(playerId, playerIdSpecified, playerGroupId, playerGroupIdSpecified, null);
        }
        
        /// <remarks/>
        public void addPlayerGroupAsync(int playerId, bool playerIdSpecified, int playerGroupId, bool playerGroupIdSpecified, object userState) {
            if ((this.addPlayerGroupOperationCompleted == null)) {
                this.addPlayerGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddPlayerGroupOperationCompleted);
            }
            this.InvokeAsync("addPlayerGroup", new object[] {
                        playerId,
                        playerIdSpecified,
                        playerGroupId,
                        playerGroupIdSpecified}, this.addPlayerGroupOperationCompleted, userState);
        }
        
        private void OnaddPlayerGroupOperationCompleted(object arg) {
            if ((this.addPlayerGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addPlayerGroupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://v1.2.api.cm.scala.com", ResponseNamespace="http://v1.2.api.cm.scala.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("addedValues", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public metadataValueTO[] addMetaValues([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int playerId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool playerIdSpecified, [System.Xml.Serialization.XmlElementAttribute("values", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] metadataValueTO[] values) {
            object[] results = this.Invoke("addMetaValues", new object[] {
                        playerId,
                        playerIdSpecified,
                        values});
            return ((metadataValueTO[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddMetaValues(int playerId, bool playerIdSpecified, metadataValueTO[] values, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addMetaValues", new object[] {
                        playerId,
                        playerIdSpecified,
                        values}, callback, asyncState);
        }
        
        /// <remarks/>
        public metadataValueTO[] EndaddMetaValues(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((metadataValueTO[])(results[0]));
        }
        
        /// <remarks/>
        public void addMetaValuesAsync(int playerId, bool playerIdSpecified, metadataValueTO[] values) {
            this.addMetaValuesAsync(playerId, playerIdSpecified, values, null);
        }
        
        /// <remarks/>
        public void addMetaValuesAsync(int playerId, bool playerIdSpecified, metadataValueTO[] values, object userState) {
            if ((this.addMetaValuesOperationCompleted == null)) {
                this.addMetaValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddMetaValuesOperationCompleted);
            }
            this.InvokeAsync("addMetaValues", new object[] {
                        playerId,
                        playerIdSpecified,
                        values}, this.addMetaValuesOperationCompleted, userState);
        }
        
        private void OnaddMetaValuesOperationCompleted(object arg) {
            if ((this.addMetaValuesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addMetaValuesCompleted(this, new addMetaValuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://v1.2.api.cm.scala.com", ResponseNamespace="http://v1.2.api.cm.scala.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public playerHealthTO getPlayerHealth([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int playerId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool playerIdSpecified) {
            object[] results = this.Invoke("getPlayerHealth", new object[] {
                        playerId,
                        playerIdSpecified});
            return ((playerHealthTO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetPlayerHealth(int playerId, bool playerIdSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getPlayerHealth", new object[] {
                        playerId,
                        playerIdSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public playerHealthTO EndgetPlayerHealth(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((playerHealthTO)(results[0]));
        }
        
        /// <remarks/>
        public void getPlayerHealthAsync(int playerId, bool playerIdSpecified) {
            this.getPlayerHealthAsync(playerId, playerIdSpecified, null);
        }
        
        /// <remarks/>
        public void getPlayerHealthAsync(int playerId, bool playerIdSpecified, object userState) {
            if ((this.getPlayerHealthOperationCompleted == null)) {
                this.getPlayerHealthOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPlayerHealthOperationCompleted);
            }
            this.InvokeAsync("getPlayerHealth", new object[] {
                        playerId,
                        playerIdSpecified}, this.getPlayerHealthOperationCompleted, userState);
        }
        
        private void OngetPlayerHealthOperationCompleted(object arg) {
            if ((this.getPlayerHealthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPlayerHealthCompleted(this, new getPlayerHealthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://v1.2.api.cm.scala.com", ResponseNamespace="http://v1.2.api.cm.scala.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("player", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public playerTO get([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int playerId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool playerIdSpecified) {
            object[] results = this.Invoke("get", new object[] {
                        playerId,
                        playerIdSpecified});
            return ((playerTO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginget(int playerId, bool playerIdSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("get", new object[] {
                        playerId,
                        playerIdSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public playerTO Endget(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((playerTO)(results[0]));
        }
        
        /// <remarks/>
        public void getAsync(int playerId, bool playerIdSpecified) {
            this.getAsync(playerId, playerIdSpecified, null);
        }
        
        /// <remarks/>
        public void getAsync(int playerId, bool playerIdSpecified, object userState) {
            if ((this.getOperationCompleted == null)) {
                this.getOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetOperationCompleted);
            }
            this.InvokeAsync("get", new object[] {
                        playerId,
                        playerIdSpecified}, this.getOperationCompleted, userState);
        }
        
        private void OngetOperationCompleted(object arg) {
            if ((this.getCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCompleted(this, new getCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://v1.2.api.cm.scala.com", ResponseNamespace="http://v1.2.api.cm.scala.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("softwareVersion", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getSoftwareVersion([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int playerId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool playerIdSpecified) {
            object[] results = this.Invoke("getSoftwareVersion", new object[] {
                        playerId,
                        playerIdSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetSoftwareVersion(int playerId, bool playerIdSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getSoftwareVersion", new object[] {
                        playerId,
                        playerIdSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndgetSoftwareVersion(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getSoftwareVersionAsync(int playerId, bool playerIdSpecified) {
            this.getSoftwareVersionAsync(playerId, playerIdSpecified, null);
        }
        
        /// <remarks/>
        public void getSoftwareVersionAsync(int playerId, bool playerIdSpecified, object userState) {
            if ((this.getSoftwareVersionOperationCompleted == null)) {
                this.getSoftwareVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSoftwareVersionOperationCompleted);
            }
            this.InvokeAsync("getSoftwareVersion", new object[] {
                        playerId,
                        playerIdSpecified}, this.getSoftwareVersionOperationCompleted, userState);
        }
        
        private void OngetSoftwareVersionOperationCompleted(object arg) {
            if ((this.getSoftwareVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSoftwareVersionCompleted(this, new getSoftwareVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://v1.2.api.cm.scala.com", ResponseNamespace="http://v1.2.api.cm.scala.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void clearProblem([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int playerId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool playerIdSpecified, [System.Xml.Serialization.XmlElementAttribute("clearProblem", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out bool clearProblem1, [System.Xml.Serialization.XmlElementAttribute("clearProblem", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] out bool clearProblem1Specified) {
            object[] results = this.Invoke("clearProblem", new object[] {
                        playerId,
                        playerIdSpecified});
            clearProblem1 = ((bool)(results[0]));
            clearProblem1Specified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginclearProblem(int playerId, bool playerIdSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("clearProblem", new object[] {
                        playerId,
                        playerIdSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndclearProblem(System.IAsyncResult asyncResult, out bool clearProblem1, out bool clearProblem1Specified) {
            object[] results = this.EndInvoke(asyncResult);
            clearProblem1 = ((bool)(results[0]));
            clearProblem1Specified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void clearProblemAsync(int playerId, bool playerIdSpecified) {
            this.clearProblemAsync(playerId, playerIdSpecified, null);
        }
        
        /// <remarks/>
        public void clearProblemAsync(int playerId, bool playerIdSpecified, object userState) {
            if ((this.clearProblemOperationCompleted == null)) {
                this.clearProblemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnclearProblemOperationCompleted);
            }
            this.InvokeAsync("clearProblem", new object[] {
                        playerId,
                        playerIdSpecified}, this.clearProblemOperationCompleted, userState);
        }
        
        private void OnclearProblemOperationCompleted(object arg) {
            if ((this.clearProblemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.clearProblemCompleted(this, new clearProblemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://v1.2.api.cm.scala.com", ResponseNamespace="http://v1.2.api.cm.scala.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("playerDisplays", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public playerDisplayTO[] getPlayerDisplays([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int playerId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool playerIdSpecified) {
            object[] results = this.Invoke("getPlayerDisplays", new object[] {
                        playerId,
                        playerIdSpecified});
            return ((playerDisplayTO[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetPlayerDisplays(int playerId, bool playerIdSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getPlayerDisplays", new object[] {
                        playerId,
                        playerIdSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public playerDisplayTO[] EndgetPlayerDisplays(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((playerDisplayTO[])(results[0]));
        }
        
        /// <remarks/>
        public void getPlayerDisplaysAsync(int playerId, bool playerIdSpecified) {
            this.getPlayerDisplaysAsync(playerId, playerIdSpecified, null);
        }
        
        /// <remarks/>
        public void getPlayerDisplaysAsync(int playerId, bool playerIdSpecified, object userState) {
            if ((this.getPlayerDisplaysOperationCompleted == null)) {
                this.getPlayerDisplaysOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPlayerDisplaysOperationCompleted);
            }
            this.InvokeAsync("getPlayerDisplays", new object[] {
                        playerId,
                        playerIdSpecified}, this.getPlayerDisplaysOperationCompleted, userState);
        }
        
        private void OngetPlayerDisplaysOperationCompleted(object arg) {
            if ((this.getPlayerDisplaysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPlayerDisplaysCompleted(this, new getPlayerDisplaysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://v1.2.api.cm.scala.com", ResponseNamespace="http://v1.2.api.cm.scala.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("addedValue", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public metadataValueTO addMetaValue([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int playerId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool playerIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] metadataValueTO value) {
            object[] results = this.Invoke("addMetaValue", new object[] {
                        playerId,
                        playerIdSpecified,
                        value});
            return ((metadataValueTO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddMetaValue(int playerId, bool playerIdSpecified, metadataValueTO value, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addMetaValue", new object[] {
                        playerId,
                        playerIdSpecified,
                        value}, callback, asyncState);
        }
        
        /// <remarks/>
        public metadataValueTO EndaddMetaValue(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((metadataValueTO)(results[0]));
        }
        
        /// <remarks/>
        public void addMetaValueAsync(int playerId, bool playerIdSpecified, metadataValueTO value) {
            this.addMetaValueAsync(playerId, playerIdSpecified, value, null);
        }
        
        /// <remarks/>
        public void addMetaValueAsync(int playerId, bool playerIdSpecified, metadataValueTO value, object userState) {
            if ((this.addMetaValueOperationCompleted == null)) {
                this.addMetaValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddMetaValueOperationCompleted);
            }
            this.InvokeAsync("addMetaValue", new object[] {
                        playerId,
                        playerIdSpecified,
                        value}, this.addMetaValueOperationCompleted, userState);
        }
        
        private void OnaddMetaValueOperationCompleted(object arg) {
            if ((this.addMetaValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addMetaValueCompleted(this, new addMetaValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://v1.2.api.cm.scala.com", ResponseNamespace="http://v1.2.api.cm.scala.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("updatedPlayerDisplay", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public playerDisplayTO updatePlayerDisplay([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] playerDisplayTO playerDisplay) {
            object[] results = this.Invoke("updatePlayerDisplay", new object[] {
                        playerDisplay});
            return ((playerDisplayTO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginupdatePlayerDisplay(playerDisplayTO playerDisplay, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("updatePlayerDisplay", new object[] {
                        playerDisplay}, callback, asyncState);
        }
        
        /// <remarks/>
        public playerDisplayTO EndupdatePlayerDisplay(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((playerDisplayTO)(results[0]));
        }
        
        /// <remarks/>
        public void updatePlayerDisplayAsync(playerDisplayTO playerDisplay) {
            this.updatePlayerDisplayAsync(playerDisplay, null);
        }
        
        /// <remarks/>
        public void updatePlayerDisplayAsync(playerDisplayTO playerDisplay, object userState) {
            if ((this.updatePlayerDisplayOperationCompleted == null)) {
                this.updatePlayerDisplayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdatePlayerDisplayOperationCompleted);
            }
            this.InvokeAsync("updatePlayerDisplay", new object[] {
                        playerDisplay}, this.updatePlayerDisplayOperationCompleted, userState);
        }
        
        private void OnupdatePlayerDisplayOperationCompleted(object arg) {
            if ((this.updatePlayerDisplayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updatePlayerDisplayCompleted(this, new updatePlayerDisplayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://v1.2.api.cm.scala.com", ResponseNamespace="http://v1.2.api.cm.scala.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteAllPickValues([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int metadataId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool metadataIdSpecified) {
            this.Invoke("deleteAllPickValues", new object[] {
                        metadataId,
                        metadataIdSpecified});
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteAllPickValues(int metadataId, bool metadataIdSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteAllPickValues", new object[] {
                        metadataId,
                        metadataIdSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EnddeleteAllPickValues(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void deleteAllPickValuesAsync(int metadataId, bool metadataIdSpecified) {
            this.deleteAllPickValuesAsync(metadataId, metadataIdSpecified, null);
        }
        
        /// <remarks/>
        public void deleteAllPickValuesAsync(int metadataId, bool metadataIdSpecified, object userState) {
            if ((this.deleteAllPickValuesOperationCompleted == null)) {
                this.deleteAllPickValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAllPickValuesOperationCompleted);
            }
            this.InvokeAsync("deleteAllPickValues", new object[] {
                        metadataId,
                        metadataIdSpecified}, this.deleteAllPickValuesOperationCompleted, userState);
        }
        
        private void OndeleteAllPickValuesOperationCompleted(object arg) {
            if ((this.deleteAllPickValuesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAllPickValuesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://v1.2.api.cm.scala.com", ResponseNamespace="http://v1.2.api.cm.scala.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("addedPlayerDisplay", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public playerDisplayTO addPlayerDisplay([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int playerId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool playerIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] playerDisplayTO playerDisplay) {
            object[] results = this.Invoke("addPlayerDisplay", new object[] {
                        playerId,
                        playerIdSpecified,
                        playerDisplay});
            return ((playerDisplayTO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddPlayerDisplay(int playerId, bool playerIdSpecified, playerDisplayTO playerDisplay, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addPlayerDisplay", new object[] {
                        playerId,
                        playerIdSpecified,
                        playerDisplay}, callback, asyncState);
        }
        
        /// <remarks/>
        public playerDisplayTO EndaddPlayerDisplay(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((playerDisplayTO)(results[0]));
        }
        
        /// <remarks/>
        public void addPlayerDisplayAsync(int playerId, bool playerIdSpecified, playerDisplayTO playerDisplay) {
            this.addPlayerDisplayAsync(playerId, playerIdSpecified, playerDisplay, null);
        }
        
        /// <remarks/>
        public void addPlayerDisplayAsync(int playerId, bool playerIdSpecified, playerDisplayTO playerDisplay, object userState) {
            if ((this.addPlayerDisplayOperationCompleted == null)) {
                this.addPlayerDisplayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddPlayerDisplayOperationCompleted);
            }
            this.InvokeAsync("addPlayerDisplay", new object[] {
                        playerId,
                        playerIdSpecified,
                        playerDisplay}, this.addPlayerDisplayOperationCompleted, userState);
        }
        
        private void OnaddPlayerDisplayOperationCompleted(object arg) {
            if ((this.addPlayerDisplayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addPlayerDisplayCompleted(this, new addPlayerDisplayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://v1.2.api.cm.scala.com", ResponseNamespace="http://v1.2.api.cm.scala.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public exModuleTO[] getAvailableExModules() {
            object[] results = this.Invoke("getAvailableExModules", new object[0]);
            return ((exModuleTO[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetAvailableExModules(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getAvailableExModules", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public exModuleTO[] EndgetAvailableExModules(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((exModuleTO[])(results[0]));
        }
        
        /// <remarks/>
        public void getAvailableExModulesAsync() {
            this.getAvailableExModulesAsync(null);
        }
        
        /// <remarks/>
        public void getAvailableExModulesAsync(object userState) {
            if ((this.getAvailableExModulesOperationCompleted == null)) {
                this.getAvailableExModulesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAvailableExModulesOperationCompleted);
            }
            this.InvokeAsync("getAvailableExModules", new object[0], this.getAvailableExModulesOperationCompleted, userState);
        }
        
        private void OngetAvailableExModulesOperationCompleted(object arg) {
            if ((this.getAvailableExModulesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAvailableExModulesCompleted(this, new getAvailableExModulesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://v1.2.api.cm.scala.com", ResponseNamespace="http://v1.2.api.cm.scala.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getPlayerLogFileAsBytes([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] playerLogTO playerLogTO) {
            object[] results = this.Invoke("getPlayerLogFileAsBytes", new object[] {
                        playerLogTO});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetPlayerLogFileAsBytes(playerLogTO playerLogTO, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getPlayerLogFileAsBytes", new object[] {
                        playerLogTO}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndgetPlayerLogFileAsBytes(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getPlayerLogFileAsBytesAsync(playerLogTO playerLogTO) {
            this.getPlayerLogFileAsBytesAsync(playerLogTO, null);
        }
        
        /// <remarks/>
        public void getPlayerLogFileAsBytesAsync(playerLogTO playerLogTO, object userState) {
            if ((this.getPlayerLogFileAsBytesOperationCompleted == null)) {
                this.getPlayerLogFileAsBytesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPlayerLogFileAsBytesOperationCompleted);
            }
            this.InvokeAsync("getPlayerLogFileAsBytes", new object[] {
                        playerLogTO}, this.getPlayerLogFileAsBytesOperationCompleted, userState);
        }
        
        private void OngetPlayerLogFileAsBytesOperationCompleted(object arg) {
            if ((this.getPlayerLogFileAsBytesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPlayerLogFileAsBytesCompleted(this, new getPlayerLogFileAsBytesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://v1.2.api.cm.scala.com", ResponseNamespace="http://v1.2.api.cm.scala.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void delete([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int playerId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool playerIdSpecified) {
            this.Invoke("delete", new object[] {
                        playerId,
                        playerIdSpecified});
        }
        
        /// <remarks/>
        public System.IAsyncResult Begindelete(int playerId, bool playerIdSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("delete", new object[] {
                        playerId,
                        playerIdSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public void Enddelete(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void deleteAsync(int playerId, bool playerIdSpecified) {
            this.deleteAsync(playerId, playerIdSpecified, null);
        }
        
        /// <remarks/>
        public void deleteAsync(int playerId, bool playerIdSpecified, object userState) {
            if ((this.deleteOperationCompleted == null)) {
                this.deleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteOperationCompleted);
            }
            this.InvokeAsync("delete", new object[] {
                        playerId,
                        playerIdSpecified}, this.deleteOperationCompleted, userState);
        }
        
        private void OndeleteOperationCompleted(object arg) {
            if ((this.deleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://v1.2.api.cm.scala.com", ResponseNamespace="http://v1.2.api.cm.scala.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteMetaValue([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int metaValueId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool metaValueIdSpecified) {
            this.Invoke("deleteMetaValue", new object[] {
                        metaValueId,
                        metaValueIdSpecified});
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteMetaValue(int metaValueId, bool metaValueIdSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteMetaValue", new object[] {
                        metaValueId,
                        metaValueIdSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EnddeleteMetaValue(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void deleteMetaValueAsync(int metaValueId, bool metaValueIdSpecified) {
            this.deleteMetaValueAsync(metaValueId, metaValueIdSpecified, null);
        }
        
        /// <remarks/>
        public void deleteMetaValueAsync(int metaValueId, bool metaValueIdSpecified, object userState) {
            if ((this.deleteMetaValueOperationCompleted == null)) {
                this.deleteMetaValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteMetaValueOperationCompleted);
            }
            this.InvokeAsync("deleteMetaValue", new object[] {
                        metaValueId,
                        metaValueIdSpecified}, this.deleteMetaValueOperationCompleted, userState);
        }
        
        private void OndeleteMetaValueOperationCompleted(object arg) {
            if ((this.deleteMetaValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteMetaValueCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://v1.2.api.cm.scala.com", ResponseNamespace="http://v1.2.api.cm.scala.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteAllPlayerDisplays([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int playerId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool playerIdSpecified) {
            this.Invoke("deleteAllPlayerDisplays", new object[] {
                        playerId,
                        playerIdSpecified});
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteAllPlayerDisplays(int playerId, bool playerIdSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteAllPlayerDisplays", new object[] {
                        playerId,
                        playerIdSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EnddeleteAllPlayerDisplays(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void deleteAllPlayerDisplaysAsync(int playerId, bool playerIdSpecified) {
            this.deleteAllPlayerDisplaysAsync(playerId, playerIdSpecified, null);
        }
        
        /// <remarks/>
        public void deleteAllPlayerDisplaysAsync(int playerId, bool playerIdSpecified, object userState) {
            if ((this.deleteAllPlayerDisplaysOperationCompleted == null)) {
                this.deleteAllPlayerDisplaysOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAllPlayerDisplaysOperationCompleted);
            }
            this.InvokeAsync("deleteAllPlayerDisplays", new object[] {
                        playerId,
                        playerIdSpecified}, this.deleteAllPlayerDisplaysOperationCompleted, userState);
        }
        
        private void OndeleteAllPlayerDisplaysOperationCompleted(object arg) {
            if ((this.deleteAllPlayerDisplaysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAllPlayerDisplaysCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://v1.2.api.cm.scala.com", ResponseNamespace="http://v1.2.api.cm.scala.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("addedPlayerDisplays", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public playerDisplayTO[] addPlayerDisplays([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int playerId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool playerIdSpecified, [System.Xml.Serialization.XmlElementAttribute("playerDisplays", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] playerDisplayTO[] playerDisplays) {
            object[] results = this.Invoke("addPlayerDisplays", new object[] {
                        playerId,
                        playerIdSpecified,
                        playerDisplays});
            return ((playerDisplayTO[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddPlayerDisplays(int playerId, bool playerIdSpecified, playerDisplayTO[] playerDisplays, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addPlayerDisplays", new object[] {
                        playerId,
                        playerIdSpecified,
                        playerDisplays}, callback, asyncState);
        }
        
        /// <remarks/>
        public playerDisplayTO[] EndaddPlayerDisplays(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((playerDisplayTO[])(results[0]));
        }
        
        /// <remarks/>
        public void addPlayerDisplaysAsync(int playerId, bool playerIdSpecified, playerDisplayTO[] playerDisplays) {
            this.addPlayerDisplaysAsync(playerId, playerIdSpecified, playerDisplays, null);
        }
        
        /// <remarks/>
        public void addPlayerDisplaysAsync(int playerId, bool playerIdSpecified, playerDisplayTO[] playerDisplays, object userState) {
            if ((this.addPlayerDisplaysOperationCompleted == null)) {
                this.addPlayerDisplaysOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddPlayerDisplaysOperationCompleted);
            }
            this.InvokeAsync("addPlayerDisplays", new object[] {
                        playerId,
                        playerIdSpecified,
                        playerDisplays}, this.addPlayerDisplaysOperationCompleted, userState);
        }
        
        private void OnaddPlayerDisplaysOperationCompleted(object arg) {
            if ((this.addPlayerDisplaysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addPlayerDisplaysCompleted(this, new addPlayerDisplaysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://v1.2.api.cm.scala.com", ResponseNamespace="http://v1.2.api.cm.scala.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteAllMetaValues([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int playerId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool playerIdSpecified) {
            this.Invoke("deleteAllMetaValues", new object[] {
                        playerId,
                        playerIdSpecified});
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteAllMetaValues(int playerId, bool playerIdSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteAllMetaValues", new object[] {
                        playerId,
                        playerIdSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EnddeleteAllMetaValues(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void deleteAllMetaValuesAsync(int playerId, bool playerIdSpecified) {
            this.deleteAllMetaValuesAsync(playerId, playerIdSpecified, null);
        }
        
        /// <remarks/>
        public void deleteAllMetaValuesAsync(int playerId, bool playerIdSpecified, object userState) {
            if ((this.deleteAllMetaValuesOperationCompleted == null)) {
                this.deleteAllMetaValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAllMetaValuesOperationCompleted);
            }
            this.InvokeAsync("deleteAllMetaValues", new object[] {
                        playerId,
                        playerIdSpecified}, this.deleteAllMetaValuesOperationCompleted, userState);
        }
        
        private void OndeleteAllMetaValuesOperationCompleted(object arg) {
            if ((this.deleteAllMetaValuesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAllMetaValuesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://v1.2.api.cm.scala.com", ResponseNamespace="http://v1.2.api.cm.scala.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("pickValues", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public picklistValueTO[] getPickValues([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int metadataId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool metadataIdSpecified) {
            object[] results = this.Invoke("getPickValues", new object[] {
                        metadataId,
                        metadataIdSpecified});
            return ((picklistValueTO[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetPickValues(int metadataId, bool metadataIdSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getPickValues", new object[] {
                        metadataId,
                        metadataIdSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public picklistValueTO[] EndgetPickValues(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((picklistValueTO[])(results[0]));
        }
        
        /// <remarks/>
        public void getPickValuesAsync(int metadataId, bool metadataIdSpecified) {
            this.getPickValuesAsync(metadataId, metadataIdSpecified, null);
        }
        
        /// <remarks/>
        public void getPickValuesAsync(int metadataId, bool metadataIdSpecified, object userState) {
            if ((this.getPickValuesOperationCompleted == null)) {
                this.getPickValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPickValuesOperationCompleted);
            }
            this.InvokeAsync("getPickValues", new object[] {
                        metadataId,
                        metadataIdSpecified}, this.getPickValuesOperationCompleted, userState);
        }
        
        private void OngetPickValuesOperationCompleted(object arg) {
            if ((this.getPickValuesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPickValuesCompleted(this, new getPickValuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://v1.2.api.cm.scala.com", ResponseNamespace="http://v1.2.api.cm.scala.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("metadata", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public metadataTO getMeta([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int metadataId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool metadataIdSpecified) {
            object[] results = this.Invoke("getMeta", new object[] {
                        metadataId,
                        metadataIdSpecified});
            return ((metadataTO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetMeta(int metadataId, bool metadataIdSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getMeta", new object[] {
                        metadataId,
                        metadataIdSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public metadataTO EndgetMeta(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((metadataTO)(results[0]));
        }
        
        /// <remarks/>
        public void getMetaAsync(int metadataId, bool metadataIdSpecified) {
            this.getMetaAsync(metadataId, metadataIdSpecified, null);
        }
        
        /// <remarks/>
        public void getMetaAsync(int metadataId, bool metadataIdSpecified, object userState) {
            if ((this.getMetaOperationCompleted == null)) {
                this.getMetaOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMetaOperationCompleted);
            }
            this.InvokeAsync("getMeta", new object[] {
                        metadataId,
                        metadataIdSpecified}, this.getMetaOperationCompleted, userState);
        }
        
        private void OngetMetaOperationCompleted(object arg) {
            if ((this.getMetaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMetaCompleted(this, new getMetaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://v1.2.api.cm.scala.com", ResponseNamespace="http://v1.2.api.cm.scala.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("players", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public playerTO[] list([System.Xml.Serialization.XmlElementAttribute("searchCriteria", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] searchCriteriaTO[] searchCriteria, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] listResultCriteriaTO listResult) {
            object[] results = this.Invoke("list", new object[] {
                        searchCriteria,
                        listResult});
            return ((playerTO[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginlist(searchCriteriaTO[] searchCriteria, listResultCriteriaTO listResult, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("list", new object[] {
                        searchCriteria,
                        listResult}, callback, asyncState);
        }
        
        /// <remarks/>
        public playerTO[] Endlist(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((playerTO[])(results[0]));
        }
        
        /// <remarks/>
        public void listAsync(searchCriteriaTO[] searchCriteria, listResultCriteriaTO listResult) {
            this.listAsync(searchCriteria, listResult, null);
        }
        
        /// <remarks/>
        public void listAsync(searchCriteriaTO[] searchCriteria, listResultCriteriaTO listResult, object userState) {
            if ((this.listOperationCompleted == null)) {
                this.listOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistOperationCompleted);
            }
            this.InvokeAsync("list", new object[] {
                        searchCriteria,
                        listResult}, this.listOperationCompleted, userState);
        }
        
        private void OnlistOperationCompleted(object arg) {
            if ((this.listCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listCompleted(this, new listCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v1.1.api.cm.scala.com")]
    public partial class searchCriteriaTO {
        
        private string columnField;
        
        private bool disjunctionField;
        
        private string metaDataField;
        
        private string otherValueField;
        
        private restrictionEnum restrictionField;
        
        private bool restrictionFieldSpecified;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string column {
            get {
                return this.columnField;
            }
            set {
                this.columnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool disjunction {
            get {
                return this.disjunctionField;
            }
            set {
                this.disjunctionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string metaData {
            get {
                return this.metaDataField;
            }
            set {
                this.metaDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string otherValue {
            get {
                return this.otherValueField;
            }
            set {
                this.otherValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public restrictionEnum restriction {
            get {
                return this.restrictionField;
            }
            set {
                this.restrictionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool restrictionSpecified {
            get {
                return this.restrictionFieldSpecified;
            }
            set {
                this.restrictionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v1.1.api.cm.scala.com")]
    public enum restrictionEnum {
        
        /// <remarks/>
        EQUALS,
        
        /// <remarks/>
        NOT_EQUALS,
        
        /// <remarks/>
        LIKE,
        
        /// <remarks/>
        BETWEEN,
        
        /// <remarks/>
        IS_EMPTY,
        
        /// <remarks/>
        IS_NOT_EMPTY,
        
        /// <remarks/>
        LESS_THAN,
        
        /// <remarks/>
        LESS_THAN_OR_EQUAL,
        
        /// <remarks/>
        GREATER_THAN,
        
        /// <remarks/>
        GREATER_THAN_OR_EQUAL,
        
        /// <remarks/>
        SIZE_EQUAL,
        
        /// <remarks/>
        SIZE_NOT_EQUAL,
        
        /// <remarks/>
        SIZE_LESS_THAN,
        
        /// <remarks/>
        SIZE_GREATER_THAN,
        
        /// <remarks/>
        SIZE_LESS_THAN_OR_EQUAL,
        
        /// <remarks/>
        SIZE_GREATER_THAN_OR_EQUAL,
        
        /// <remarks/>
        IS_NULL,
        
        /// <remarks/>
        IS_NOT_NULL,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v1.1.api.cm.scala.com")]
    public partial class playerDisplayTO {
        
        private int channelIdField;
        
        private bool channelIdFieldSpecified;
        
        private string descriptionField;
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private int screenCounterField;
        
        private bool screenCounterFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int channelId {
            get {
                return this.channelIdField;
            }
            set {
                this.channelIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool channelIdSpecified {
            get {
                return this.channelIdFieldSpecified;
            }
            set {
                this.channelIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool idSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int screenCounter {
            get {
                return this.screenCounterField;
            }
            set {
                this.screenCounterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool screenCounterSpecified {
            get {
                return this.screenCounterFieldSpecified;
            }
            set {
                this.screenCounterFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v1.1.api.cm.scala.com")]
    public partial class playerHealthTO {
        
        private string[] errorMessagesField;
        
        private System.DateTime lastHeartbeatField;
        
        private bool lastHeartbeatFieldSpecified;
        
        private playerHealthEnum playerHealthEnumField;
        
        private bool playerHealthEnumFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("errorMessages", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] errorMessages {
            get {
                return this.errorMessagesField;
            }
            set {
                this.errorMessagesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime lastHeartbeat {
            get {
                return this.lastHeartbeatField;
            }
            set {
                this.lastHeartbeatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lastHeartbeatSpecified {
            get {
                return this.lastHeartbeatFieldSpecified;
            }
            set {
                this.lastHeartbeatFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public playerHealthEnum playerHealthEnum {
            get {
                return this.playerHealthEnumField;
            }
            set {
                this.playerHealthEnumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool playerHealthEnumSpecified {
            get {
                return this.playerHealthEnumFieldSpecified;
            }
            set {
                this.playerHealthEnumFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v1.1.api.cm.scala.com")]
    public enum playerHealthEnum {
        
        /// <remarks/>
        NEVER_REPORTED,
        
        /// <remarks/>
        HEALTHY,
        
        /// <remarks/>
        ERROR,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v1.1.api.cm.scala.com")]
    public partial class exModuleTO {
        
        private string moduleNameField;
        
        private int numOfLicenseAvailableField;
        
        private bool numOfLicenseAvailableFieldSpecified;
        
        private int numOfLicenseUsedField;
        
        private bool numOfLicenseUsedFieldSpecified;
        
        private int totalNumOfLicenseField;
        
        private bool totalNumOfLicenseFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string moduleName {
            get {
                return this.moduleNameField;
            }
            set {
                this.moduleNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int numOfLicenseAvailable {
            get {
                return this.numOfLicenseAvailableField;
            }
            set {
                this.numOfLicenseAvailableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numOfLicenseAvailableSpecified {
            get {
                return this.numOfLicenseAvailableFieldSpecified;
            }
            set {
                this.numOfLicenseAvailableFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int numOfLicenseUsed {
            get {
                return this.numOfLicenseUsedField;
            }
            set {
                this.numOfLicenseUsedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numOfLicenseUsedSpecified {
            get {
                return this.numOfLicenseUsedFieldSpecified;
            }
            set {
                this.numOfLicenseUsedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int totalNumOfLicense {
            get {
                return this.totalNumOfLicenseField;
            }
            set {
                this.totalNumOfLicenseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool totalNumOfLicenseSpecified {
            get {
                return this.totalNumOfLicenseFieldSpecified;
            }
            set {
                this.totalNumOfLicenseFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v1.1.api.cm.scala.com")]
    public partial class planDeliveryTO {
        
        private string passwordField;
        
        private planDeliveryMethodEnum planDeliveryMethodEnumField;
        
        private bool planDeliveryMethodEnumFieldSpecified;
        
        private string playerUrlOrHostNameField;
        
        private int pollingIntervalField;
        
        private bool pollingIntervalFieldSpecified;
        
        private pollingUnitEnum pollingUnitEnumField;
        
        private bool pollingUnitEnumFieldSpecified;
        
        private string userNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public planDeliveryMethodEnum planDeliveryMethodEnum {
            get {
                return this.planDeliveryMethodEnumField;
            }
            set {
                this.planDeliveryMethodEnumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool planDeliveryMethodEnumSpecified {
            get {
                return this.planDeliveryMethodEnumFieldSpecified;
            }
            set {
                this.planDeliveryMethodEnumFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string playerUrlOrHostName {
            get {
                return this.playerUrlOrHostNameField;
            }
            set {
                this.playerUrlOrHostNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int pollingInterval {
            get {
                return this.pollingIntervalField;
            }
            set {
                this.pollingIntervalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pollingIntervalSpecified {
            get {
                return this.pollingIntervalFieldSpecified;
            }
            set {
                this.pollingIntervalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public pollingUnitEnum pollingUnitEnum {
            get {
                return this.pollingUnitEnumField;
            }
            set {
                this.pollingUnitEnumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pollingUnitEnumSpecified {
            get {
                return this.pollingUnitEnumFieldSpecified;
            }
            set {
                this.pollingUnitEnumFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v1.1.api.cm.scala.com")]
    public enum planDeliveryMethodEnum {
        
        /// <remarks/>
        CONTENT_MANAGER_DIRECT,
        
        /// <remarks/>
        PLAYER_DIRECT_FTP,
        
        /// <remarks/>
        PUSH_TO_PLAYER,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v1.1.api.cm.scala.com")]
    public enum pollingUnitEnum {
        
        /// <remarks/>
        MINUTES,
        
        /// <remarks/>
        SECONDS,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v1.1.api.cm.scala.com")]
    public partial class playerTO {
        
        private string descriptionField;
        
        private bool enabledField;
        
        private bool enabledFieldSpecified;
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private string macField;
        
        private string nameField;
        
        private playerTypeEnum playerTypeField;
        
        private bool playerTypeFieldSpecified;
        
        private bool previewPlayerField;
        
        private bool previewPlayerFieldSpecified;
        
        private string uuidField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool enabledSpecified {
            get {
                return this.enabledFieldSpecified;
            }
            set {
                this.enabledFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool idSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string mac {
            get {
                return this.macField;
            }
            set {
                this.macField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public playerTypeEnum playerType {
            get {
                return this.playerTypeField;
            }
            set {
                this.playerTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool playerTypeSpecified {
            get {
                return this.playerTypeFieldSpecified;
            }
            set {
                this.playerTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool previewPlayer {
            get {
                return this.previewPlayerField;
            }
            set {
                this.previewPlayerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool previewPlayerSpecified {
            get {
                return this.previewPlayerFieldSpecified;
            }
            set {
                this.previewPlayerFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string uuid {
            get {
                return this.uuidField;
            }
            set {
                this.uuidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v1.1.api.cm.scala.com")]
    public enum playerTypeEnum {
        
        /// <remarks/>
        SCALA,
        
        /// <remarks/>
        SCALA_AUDIO_ONLY,
        
        /// <remarks/>
        IADEA_SD,
        
        /// <remarks/>
        IADEA_HD,
        
        /// <remarks/>
        IADEA_PICTURE_FRAME,
        
        /// <remarks/>
        IADEA_AUDIO_ONLY,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v1.1.api.cm.scala.com")]
    public partial class playerLogTO {
        
        private string filenameField;
        
        private string fullDownloadPathField;
        
        private string lastModifiedField;
        
        private string sizeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string filename {
            get {
                return this.filenameField;
            }
            set {
                this.filenameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string fullDownloadPath {
            get {
                return this.fullDownloadPathField;
            }
            set {
                this.fullDownloadPathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string lastModified {
            get {
                return this.lastModifiedField;
            }
            set {
                this.lastModifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v1.1.api.cm.scala.com")]
    public partial class picklistValueTO {
        
        private int idField;
        
        private int sortOrderField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int sortOrder {
            get {
                return this.sortOrderField;
            }
            set {
                this.sortOrderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v1.1.api.cm.scala.com")]
    public partial class metadataValueTO {
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private int metadataIdField;
        
        private bool metadataIdFieldSpecified;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool idSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int metadataId {
            get {
                return this.metadataIdField;
            }
            set {
                this.metadataIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool metadataIdSpecified {
            get {
                return this.metadataIdFieldSpecified;
            }
            set {
                this.metadataIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v1.1.api.cm.scala.com")]
    public partial class metadataTO {
        
        private metaAllowedValuesEnum allowedValuesField;
        
        private bool allowedValuesFieldSpecified;
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private string nameField;
        
        private metaTypeEnum typeField;
        
        private bool typeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public metaAllowedValuesEnum allowedValues {
            get {
                return this.allowedValuesField;
            }
            set {
                this.allowedValuesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool allowedValuesSpecified {
            get {
                return this.allowedValuesFieldSpecified;
            }
            set {
                this.allowedValuesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool idSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public metaTypeEnum type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v1.1.api.cm.scala.com")]
    public enum metaAllowedValuesEnum {
        
        /// <remarks/>
        ANY,
        
        /// <remarks/>
        PICKLIST,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v1.1.api.cm.scala.com")]
    public enum metaTypeEnum {
        
        /// <remarks/>
        BOOLEAN,
        
        /// <remarks/>
        INTEGER,
        
        /// <remarks/>
        STRING,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v1.1.api.cm.scala.com")]
    public partial class playerGroupTO {
        
        private string descriptionField;
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool idSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v1.1.api.cm.scala.com")]
    public partial class listResultCriteriaTO {
        
        private int firstResultField;
        
        private bool firstResultFieldSpecified;
        
        private int maxResultsField;
        
        private bool maxResultsFieldSpecified;
        
        private bool orderAscField;
        
        private bool orderAscFieldSpecified;
        
        private string orderByField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int firstResult {
            get {
                return this.firstResultField;
            }
            set {
                this.firstResultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool firstResultSpecified {
            get {
                return this.firstResultFieldSpecified;
            }
            set {
                this.firstResultFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int maxResults {
            get {
                return this.maxResultsField;
            }
            set {
                this.maxResultsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxResultsSpecified {
            get {
                return this.maxResultsFieldSpecified;
            }
            set {
                this.maxResultsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool orderAsc {
            get {
                return this.orderAscField;
            }
            set {
                this.orderAscField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool orderAscSpecified {
            get {
                return this.orderAscFieldSpecified;
            }
            set {
                this.orderAscFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string orderBy {
            get {
                return this.orderByField;
            }
            set {
                this.orderByField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void listPlayerGroupsCompletedEventHandler(object sender, listPlayerGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listPlayerGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listPlayerGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public playerGroupTO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((playerGroupTO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void listMetaCompletedEventHandler(object sender, listMetaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listMetaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listMetaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public metadataTO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((metadataTO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getMetaValueCompletedEventHandler(object sender, getMetaValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMetaValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMetaValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public metadataValueTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((metadataValueTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addPickValueCompletedEventHandler(object sender, addPickValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addPickValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addPickValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public picklistValueTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((picklistValueTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getMetaValuesCompletedEventHandler(object sender, getMetaValuesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMetaValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMetaValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public metadataValueTO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((metadataValueTO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void deletePickValueCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getPlayerLogFilesCompletedEventHandler(object sender, getPlayerLogFilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPlayerLogFilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPlayerLogFilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public playerLogTO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((playerLogTO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void deleteMetaCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void createPlayerWithPlanDeliveryCompletedEventHandler(object sender, createPlayerWithPlanDeliveryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createPlayerWithPlanDeliveryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createPlayerWithPlanDeliveryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public playerTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((playerTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void deletePlayerDisplayCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void createCompletedEventHandler(object sender, createCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public playerTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((playerTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addExModuleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addPickValuesCompletedEventHandler(object sender, addPickValuesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addPickValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addPickValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public picklistValueTO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((picklistValueTO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getExModulesForPlayerCompletedEventHandler(object sender, getExModulesForPlayerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getExModulesForPlayerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getExModulesForPlayerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public exModuleTO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((exModuleTO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void updateCompletedEventHandler(object sender, updateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public playerTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((playerTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void createMetaCompletedEventHandler(object sender, createMetaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createMetaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createMetaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public metadataTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((metadataTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void countPlayerDisplaysCompletedEventHandler(object sender, countPlayerDisplaysCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class countPlayerDisplaysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal countPlayerDisplaysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int counter {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool counterSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void removePlayerGroupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void removeExModuleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addPlayerGroupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addMetaValuesCompletedEventHandler(object sender, addMetaValuesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addMetaValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addMetaValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public metadataValueTO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((metadataValueTO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getPlayerHealthCompletedEventHandler(object sender, getPlayerHealthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPlayerHealthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPlayerHealthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public playerHealthTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((playerHealthTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getCompletedEventHandler(object sender, getCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public playerTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((playerTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getSoftwareVersionCompletedEventHandler(object sender, getSoftwareVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSoftwareVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSoftwareVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void clearProblemCompletedEventHandler(object sender, clearProblemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class clearProblemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal clearProblemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool clearProblem1 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool clearProblem1Specified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getPlayerDisplaysCompletedEventHandler(object sender, getPlayerDisplaysCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPlayerDisplaysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPlayerDisplaysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public playerDisplayTO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((playerDisplayTO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addMetaValueCompletedEventHandler(object sender, addMetaValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addMetaValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addMetaValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public metadataValueTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((metadataValueTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void updatePlayerDisplayCompletedEventHandler(object sender, updatePlayerDisplayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updatePlayerDisplayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updatePlayerDisplayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public playerDisplayTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((playerDisplayTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void deleteAllPickValuesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addPlayerDisplayCompletedEventHandler(object sender, addPlayerDisplayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addPlayerDisplayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addPlayerDisplayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public playerDisplayTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((playerDisplayTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getAvailableExModulesCompletedEventHandler(object sender, getAvailableExModulesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAvailableExModulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAvailableExModulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public exModuleTO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((exModuleTO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getPlayerLogFileAsBytesCompletedEventHandler(object sender, getPlayerLogFileAsBytesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPlayerLogFileAsBytesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPlayerLogFileAsBytesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void deleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void deleteMetaValueCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void deleteAllPlayerDisplaysCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void addPlayerDisplaysCompletedEventHandler(object sender, addPlayerDisplaysCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addPlayerDisplaysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addPlayerDisplaysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public playerDisplayTO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((playerDisplayTO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void deleteAllMetaValuesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getPickValuesCompletedEventHandler(object sender, getPickValuesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPickValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPickValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public picklistValueTO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((picklistValueTO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getMetaCompletedEventHandler(object sender, getMetaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMetaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMetaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public metadataTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((metadataTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void listCompletedEventHandler(object sender, listCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public playerTO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((playerTO[])(this.results[0]));
            }
        }
    }
}
